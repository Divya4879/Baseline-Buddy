name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        npm run install:workspaces
    
    - name: Lint code
      run: npm run lint
    
    - name: Run tests
      run: npm test
    
    - name: Test CLI functionality
      run: |
        node cli/src/index.js test
        node cli/src/index.js search "grid" --limit=3
    
    - name: Build VS Code extension
      run: |
        cd vscode-extension
        npm run compile
    
    - name: Package extension
      run: |
        cd vscode-extension
        npm install -g vsce
        vsce package

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security audit
      run: |
        npm audit --audit-level=moderate
        
  compatibility:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Test Baseline data integration
      run: |
        node -e "
          const { features } = require('web-features');
          console.log('✅ Loaded', Object.keys(features).length, 'features');
          
          // Test some key features
          const testFeatures = ['grid', 'flexbox', 'custom-properties'];
          testFeatures.forEach(id => {
            const feature = features[id];
            if (feature) {
              console.log('✅', feature.name, 'found');
            } else {
              console.log('❌', id, 'not found');
              process.exit(1);
            }
          });
        "

  demo:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Create demo project
      run: |
        mkdir -p demo-output
        cd demo-output
        
        # Create a sample HTML project
        cat > index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <style>
                .grid { display: grid; }
                .flex { display: flex; }
                .custom { color: var(--primary); }
                .has-selector { &:has(.child) { color: red; } }
            </style>
        </head>
        <body>
            <div class="grid">Grid Layout</div>
            <script>
                const arrow = () => console.log('arrow function');
                const template = `Template literal with ${arrow}`;
                const optional = obj?.prop?.nested;
            </script>
        </body>
        </html>
        EOF
        
        # Test CLI analysis
        echo "Testing CLI analysis..."
        node ../cli/src/index.js search "grid" --limit=2
        
        echo "✅ Demo completed successfully!"
    
    - name: Upload demo artifacts
      uses: actions/upload-artifact@v4
      with:
        name: demo-project
        path: demo-output/
