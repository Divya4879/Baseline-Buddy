import fs from 'fs';
import path from 'path';
import chalk from 'chalk';

export function initCommand(projectName, options = {}) {
  const { template = 'html' } = options;
  
  try {
    console.log(chalk.blue(`üèóÔ∏è  Creating project: ${projectName}`));
    
    const projectPath = path.resolve(projectName);
    
    if (fs.existsSync(projectPath)) {
      console.error(chalk.red(`‚ùå Directory ${projectName} already exists`));
      process.exit(1);
    }
    
    fs.mkdirSync(projectPath, { recursive: true });
    
    if (template === 'html') {
      createHTMLProject(projectPath, projectName);
    } else {
      console.log(chalk.yellow(`‚ö†Ô∏è  Template ${template} not implemented yet`));
      process.exit(1);
    }
    
    console.log(chalk.green(`‚úÖ Project ${projectName} created successfully!`));
    console.log(chalk.cyan(`\nNext steps:`));
    console.log(chalk.cyan(`  cd ${projectName}`));
    console.log(chalk.cyan(`  baseline-buddy check`));
    
  } catch (error) {
    console.error(chalk.red(`‚ùå Failed to create project: ${error.message}`));
    process.exit(1);
  }
}

function createHTMLProject(projectPath, projectName) {
  // Create package.json
  const packageJson = {
    name: projectName,
    version: '1.0.0',
    description: `Modern web project created with Baseline Buddy`,
    scripts: {
      check: 'baseline-buddy check',
      serve: 'python -m http.server 8000 || python3 -m http.server 8000'
    },
    keywords: ['baseline', 'modern-web'],
    license: 'MIT'
  };
  
  fs.writeFileSync(
    path.join(projectPath, 'package.json'),
    JSON.stringify(packageJson, null, 2)
  );
  
  // Create index.html
  const html = `<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>${projectName}</title>
    <style>
        :root {
            --primary: #3b82f6;
            --text: #1f2937;
        }
        
        body {
            font-family: system-ui, sans-serif;
            margin: 0;
            padding: 2rem;
            color: var(--text);
        }
        
        .container {
            display: grid;
            gap: 2rem;
            max-width: 800px;
            margin: 0 auto;
        }
        
        .card {
            display: flex;
            flex-direction: column;
            padding: 1.5rem;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>üöÄ ${projectName}</h1>
        <div class="card">
            <h2>Welcome to Baseline Buddy!</h2>
            <p>This project uses modern, Baseline-safe web features:</p>
            <ul>
                <li>‚úÖ CSS Grid Layout</li>
                <li>‚úÖ CSS Flexbox</li>
                <li>‚úÖ CSS Custom Properties</li>
            </ul>
        </div>
    </div>
    
    <script>
        // Modern JavaScript features
        const features = ['Grid', 'Flexbox', 'Custom Properties'];
        
        const displayFeatures = () => {
            console.log('üöÄ Modern features in use:', features);
        };
        
        document.addEventListener('DOMContentLoaded', displayFeatures);
    </script>
</body>
</html>`;
  
  fs.writeFileSync(path.join(projectPath, 'index.html'), html);
  
  // Create README
  const readme = `# ${projectName}

A modern web project created with **Baseline Buddy**.

## Features

This project uses Baseline-safe modern web features:
- ‚úÖ CSS Grid Layout
- ‚úÖ CSS Flexbox  
- ‚úÖ CSS Custom Properties

## Development

\`\`\`bash
# Check compatibility
baseline-buddy check

# Serve locally
npm run serve
\`\`\`

Generated by Baseline Buddy üöÄ
`;
  
  fs.writeFileSync(path.join(projectPath, 'README.md'), readme);
}
